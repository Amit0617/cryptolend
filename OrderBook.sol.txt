pragma solidity ^0.4.0;

import "./LoanContract.sol";
import "./CreditContract.sol";

contract OrderBook {
    
    struct loanData {
        address[] myLoans;
        
    }
    
    struct creditData {
        address[] myCredits;    
    }
    
    //Arrays to store the contract addresses created by borrowers and lenders
    
    
    
    //one to many mapping of borrower and lender address with the loan request and loan offers they have created
    mapping(address => loanData) _loanRequest;
    mapping(address => creditData) _loanOffer;
    
    //arrays for storing the addresses of all loan offers and _loanRequests
    // try to find way to not store address
    // required only to get allLoanOffer() and allLoanRequest() functions
    address[] public _loanRequests;
    address[] public _loanOffers;
    
    address private _owner;
    
    event LoanRequestCreated(address contractAddress, address _borrower);
    event LoanOfferCreated(address contractAddress, address _lender);
    
    function OrderBook() public{
        _owner = msg.sender;
    }
    
    function createLoanRequest() public{
        address loanContract = new LoanContract(msg.sender);  
        var loanRequest = _loanRequest[msg.sender];
        loanRequest.myLoans.push(loanContract);
        _loanRequests.push(loanContract);
        LoanRequestCreated(loanContract, msg.sender);
    }
    
    function createLoanOffer() public {
        address creditContract = new CreditContract(msg.sender);
        var loanOffer = _loanOffer[msg.sender];
        loanOffer.myCredits.push(creditContract);
        _loanOffers.push(creditContract);
        LoanOfferCreated(creditContract, msg.sender);
    }
    
    function getAllLoanRequests() public view returns(address[]){
        return _loanRequests;
    }
    
    
    function getAllLoanOffers() public view returns(address[]){
        return _loanOffers;
    }
    
    function getAllMyLoans() public view returns(address[]){
        return _loanRequest[msg.sender].myLoans;
    }
    
    function getAllMyCredits() public view returns(address[]){
        return _loanOffer[msg.sender].myCredits;
    }
    
}
